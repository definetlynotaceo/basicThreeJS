import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import fragment from"../shader/fragment.glsl";import vertex from"../shader/vertex.glsl";import*as dat from"dat.gui";import gsap from"gsap";export default class Sketch{constructor(e){this.scene=new THREE.Scene,this.container=e.dom,this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer=new THREE.WebGLRenderer,this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(15658734,1),this.container.appendChild(this.renderer.domElement),this.camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,.001,1e3),this.camera.position.set(0,0,2),this.controls=new OrbitControls(this.camera,this.renderer.domElement),this.time=0,this.isPlaying=!0,this.addObjects(),this.resize(),this.render(),this.setupResize()}settings(){this.settings={progress:0},this.gui=new dat.GUI,this.gui.add(this.settings,"progress",0,1,.01)}setupResize(){window.addEventListener("resize",this.resize.bind(this))}resize(){this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix()}addObjects(){this.material=new THREE.ShaderMaterial({extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:THREE.DoubleSide,uniforms:{time:{value:0},resolution:{value:new THREE.Vector4}},vertexShader:vertex,fragmentShader:fragment}),this.geometry=new THREE.PlaneGeometry(1,1,1,1),this.plane=new THREE.Mesh(this.geometry,this.material),this.scene.add(this.plane)}stop(){this.isPlaying=!1}play(){this.isPlaying||(this.render(),this.isPlaying=!0)}render(){this.isPlaying&&(this.time+=.05,this.material.uniforms.time.value=this.time,requestAnimationFrame(this.render.bind(this)),this.renderer.render(this.scene,this.camera))}}new Sketch({dom:document.getElementById("container")});